Linux:
    Dependencies:
    =============
        sudo apt-get install postgresql python-sqlalchemy python-psycopg2
        

    If you want to test alerts via email:
        sudo apt-get install postfix

    and when asked about postfix configuration, respond any way you want,
    as you configure the Postfix mail server as super-user via:

        Copy the main.cf file to /etc/postfix and then restart postfix:
            sudo mv /etc/postfix/main.cf /etc/postfix/main.cf.dist
            sudo cp ./DEBIAN/etc/postfix/main.cf /etc/postfix/
            sudo service postfix restart

    Configure email alert enabled/to/from/etc. in inits.py
    BY DEFAULT, ALERTS ARE OFF.

    postgres configuration
    =======================
        sudo -u postgres createuser --superuser $USER
        sudo -u postgres createuser --superuser palette
        sudo -u postgres createdb paldb

        Set the password for palette:
            sudo -u postgres psql
            postgres=# \password palette
            Enter new password: palpass
            Enter it again:
            postgres=# \quit

        See if postgres authentication is working. Try:

            psql -U palette paldb

        If that command fails with a complaint about "peer" then you need
        to set up peer authentication or you need to change "peer" to "trust"
        in /etc/postgresql/<version>/main/pg_hba.conf:

            -local all  postgres peer
            +#local all  postgres peer
            +local  all  postgres trust
            ...
            -local all  all      peer
            +#local all  all      peer
            +local  all  all      trust

        Then restart postgres:

            sudo service postgresql restart

    Windows:
        See DevBox wiki page.

To test:
========

    - Create a palette directory, preferably outside the source tree. For the controller
      this could be anywhere, but the palette app, which does not have a config file or
      command line overrides, app hard codes /var/palette, so use that directory:

        sudo mkdir /var/palette
        sudo chown ${USER}.${USER} /var/palette
        mkdir -p /var/palette/certs /var/palette/sched /var/palette/data/workbook-archive

    - Populate the sched directory:

        cp ./DEBIAN/var/palette/sched/* /var/palette/sched/

    - Copy the .pem file:

        cp ./DEBIAN/etc/ssl/certs/palette_cert.pem /var/palette/certs/

    - Generate an AES key:

        dd if=/dev/urandom of=/var/palette/.aes bs=32 count=1
        chmod 0400 /var/palette/.aes
 
    - Get a usable INI file:
        cp DEBIAN/etc/controller.ini /var/palette/

    - Edit /var/palette/controller.ini:

        +#default agent_port is 22, which conflicts with ssh
        +agent_port=8888

        ...

        -ssl_cert_file = /etc/ssl/certs/palette_cert.pem
        +#ssl_cert_file = /etc/ssl/certs/palette_cert.pem
        +ssl_cert_file = /var/palette/certs/palette_cert.pem

        ...

        -filename = /var/log/palette/controller.log
        +# comment out filename if you want console output in the terminal window
        +#filename = /var/log/palette/controller.log

    - Start the controller:
        sudo env PYTHONPATH=. python controller/controller.py /var/palette/controller.ini

    - Then start the Palette Agent:
        python agent.py

        By default, it will use this configuration:
            Hostname: one
            type: primary
            ip: 192.168.1.100
            ssl: False
            controller: localhost
            controller port: 8888

        You can start a additional agents and the command-line
        arguments to have the additional agent identify itself
        differently:
            python agent.py [-h] [--hostname HOSTNAME] 
                    [--type {primary,worker,other}]
                    [--ip IP] [--ssl] [--controller CONTROLLER] [--port PORT]

        For example:
             python agent.py --hostname mini --ip 192.168.1.5 --type other

        or to use ssl:
             python agent.py --ssl

    - Then telnet to the controller:
        telnet localhost 9000

      and enter some commands:
        status

        cli dir
            Sends the 'dir' command to run and retrieves the results
            and status.

        copy source-hostname source-path target-hostname target-path
            Sends the command to copy file 'source-path' from 'source-hostname'
            to a file named 'target-path' on host 'target-hostname'.

        backup

        restore

        restore [source-hostname]:pathname
            If the specified file is not on the primary agent, then it
            will be copied to the primary before doing the restore.
-----
The SSL certificate was created with this command:

    $ cd controller/DEBIAN/etc
    $ openssl req -new -x509 -days 730 -nodes -out palette_cert.pem -keyout palette_cert.pem
    Generating a 1024 bit RSA private key
    ..............++++++
    ..++++++
    writing new private key to 'palette_cert.pem'
    -----
    You are about to be asked to enter information that will be incorporated
    into your certificate request.
    What you are about to enter is what is called a Distinguished Name or a DN.
    There are quite a few fields but you can leave some blank
    For some fields there will be a default value,
    If you enter '.', the field will be left blank.
    -----
    Country Name (2 letter code) [AU]:US
    State or Province Name (full name) [Some-State]:CA
    Locality Name (eg, city) []:San Francisco
    Organization Name (eg, company) [Internet Widgits Pty Ltd]:Palette Software
    Organizational Unit Name (eg, section) []:
    Common Name (e.g. server FQDN or YOUR name) []:palette-software.com
    Email Address []:hostmaster@palette-software.com

The above created the file:
    palette_cert.pem
